import Head from "next/head";
import { Inter, Montserrat, Asar, Alata } from "@next/font/google";
import styles from "@/styles/Home.module.scss";
import FontSelect from "@/components/FontSelect";
import React from "react";
import TextInput from "@/components/TextInput";
import localFont from "@next/font/local";

const inter = Inter({
  weight: "600",
  subsets: ["latin", "latin-ext", "latin-ext"],
  display: "swap",
});
const montserrat = Montserrat({
  weight: "600",
  subsets: ["latin", "latin-ext"],
  display: "swap",
});
const asar = Asar({
  weight: "400",
  subsets: ["latin", "latin-ext"],
  display: "swap",
});
const alata = Alata({
  weight: "400",
  subsets: ["latin", "latin-ext"],
  display: "swap",
});
const quantify = localFont({
  src: [
    {
      path: "../fonts/Quantify.ttf",
      weight: "400",
    },
  ],
  variable: "--font-quantify",
});
const fonts = ["Montserrat", "Inter", "Asar", "Quantify", "Alata"];

export default function Home() {
  const [selectedFont, setSelectedFont] = React.useState("Montserrat");
  const [font, setFont] = React.useState(inter);
  const [text, setText] = React.useState();
  React.useEffect(() => {
    if (selectedFont === "Inter") {
      setFont(inter);
    } else if (selectedFont === "Montserrat") {
      setFont(montserrat);
    } else if (selectedFont === "Asar") {
      setFont(asar);
    } else if (selectedFont === "Quantify") {
      setFont(quantify);
    } else if (selectedFont === "Alata") {
      setFont(alata);
    }
  }, [selectedFont]);

  const handleSelect = React.useCallback(
    (e: { target: { value: React.SetStateAction<string> } }) => {
      setSelectedFont(e.target.value);
    },
    []
  );

  return (
    <>
      <Head>
        <title>Ledbim Font Checker</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={inter.className}>Ledbim Font Checker</h1>
        <div className={styles.input_container}>
          <FontSelect fonts={fonts} onChange={(e: any) => handleSelect(e)} />
          <TextInput onChange={(e: any) => setText(e.target.value)} />
        </div>
        <div className={styles.container}>
          <div className={styles.font_wrapper}>
            <h2 className={font.className}>
              {!text
                ? `Ledbim ${selectedFont} ${font.style.fontWeight} `
                : text}{" "}
              <span className="text-sm font-light whitespace-nowrap text-yellow-400">
                {" "}
                (text-4xl / 36px)
              </span>
            </h2>
            <h2 className={font.className} style={{ fontSize: "32px" }}>
              {!text
                ? `Ledbim ${selectedFont} ${font.style.fontWeight} `
                : text}
              <span className="text-sm font-light whitespace-nowrap text-yellow-400">
                {" "}
                (text-[32px] / 32px)
              </span>
            </h2>
            <h3 className={font.className}>
              {!text ? `Ledbim ${selectedFont} ${font.style.fontWeight}` : text}{" "}
              <span className="text-sm font-light whitespace-nowrap text-yellow-400">
                (text-2xl / 24px)
              </span>
            </h3>
            <h4 className={font.className}>
              {!text ? `Ledbim ${selectedFont} ${font.style.fontWeight}` : text}{" "}
              <span className="text-sm font-light whitespace-nowrap text-yellow-400">
                (text-xl / 20px)
              </span>
            </h4>
            <h5 className={font.className}>
              {!text ? `Ledbim ${selectedFont} ${font.style.fontWeight}` : text}{" "}
              <span className="text-sm font-light whitespace-nowrap text-yellow-400">
                (text-base / 16px)
              </span>
            </h5>
            <h6 className={font.className}>
              {!text
                ? `Ledbim ${selectedFont} ${font.style.fontWeight} `
                : text}{" "}
              <span className="text-sm font-light whitespace-nowrap text-yellow-400">
                {" "}
                (text-sm / 14px)
              </span>
            </h6>
            <h6 className={font.className} style={{ fontSize: "12px" }}>
              {!text
                ? `Ledbim ${selectedFont} ${font.style.fontWeight} `
                : text}
              <span className="text-sm font-light whitespace-nowrap text-yellow-400">
                {" "}
                (text-xs / 12px)
              </span>
            </h6>
          </div>
        </div>
      </main>
    </>
  );
}
